/*
 * The malware class holds the malware entity.
 * 
 * Upon contact with the player, the player
 * will not lose the game. Instead, the player's movement
 * speed will decrease.
 * 
 * It has a fast forward movement speed and immitates sideward
 * movement of the player, making avoiding it very difficult.
 * 
 * It can be killed through antivirus and firewall power ups.
 * 
 * Its effects can be dispelled by the antivirus and refresh
 * power ups.
 */

package escapethebluescreen.entity.creature.enemy;

import java.awt.Graphics;
import java.awt.Rectangle;

import escapethebluescreen.Handler;
import escapethebluescreen.entity.powerup.Firewall;
import escapethebluescreen.gfx.Animation;
import escapethebluescreen.gfx.Assets;
import escapethebluescreen.states.GameState;

public class Malware extends Enemy {
	
	private Animation defaultAnimation;
	private Animation deathAnimation;
	private int deathYLocation = 520;

	public Malware(Handler handler, float x, float y) {
		super(handler, x, y, 22, 27);
		defaultAnimation = new Animation(125, Assets.malware, false);
		deathAnimation = new Animation(70, Assets.bugKill, true);
	}

	@Override
	public void tick() {
		hitBox = new Rectangle((int) (x + bounds.x), (int) (y + bounds.y), (int) (bounds.width), (int) (bounds.height));
		
		if(GameState.player.getHitBox().intersects(this.hitBox)) {
			GameState.player.setXMobility(4);
			GameState.player.setYMobility(2);
			y = 520;
		}
		
		x = GameState.player.getX();
		
		if(y <= 0 && !this.hitBox.intersects(Firewall.killArea)) {
			defaultAnimation.tick();
			y += 3;
		} else if (y <= 520 && !this.hitBox.intersects(Firewall.killArea)) {
			defaultAnimation.tick();
			y += 5;
		} else {
			if (y < 520) {
				deathYLocation = (int) y;
			}	
			y = 520;
		}
		
		if (deathYLocation < 520) {
			deathAnimation.tick();
			deathYLocation += 5;
		}
	}

	@Override
	public void render(Graphics graphics) {
		if (y > -4 && y <= 520) {
			graphics.drawImage(defaultAnimation.getCurrentFrame(), (int) x, (int) y, null);
		}
		
		graphics.drawImage(deathAnimation.getCurrentFrame(), (int) x, deathYLocation, null);
	}

}
